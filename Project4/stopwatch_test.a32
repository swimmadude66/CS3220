; Addresses for I/O
.NAME 	IOBASE	= 0xF0000000
.NAME	OFSHEX	= 0x00000000
.NAME	OFSLEDR	= 0x00000004
.NAME	OFSLEDG	= 0x00000008
.NAME	OFSKEY 	= 0x00000010
.NAME	SW     	= 0x00000014
.NAME	TIMER  	= 0x00000020
.NAME	TLIM	= 0x00000024
.NAME	TCTL	= 0x00000120

.ORIG 0x40
SetUp:
	xor		fp,fp,fp
	; Prepare the gp register
	mvhi	gp,IOBASE
	xor		s0,s0,s0
	sw		s0, OFSHEX(gp)
	sw		s0, OFSLEDR(gp)
	sw		s0,	OFSLEDG(gp)
SetSeconds:
	lw		s0, SW(gp)			;Raw switch data
	andi	s1, s0, 0x00F		;ones place
	andi	s2, s0, 0x0F0		;tens place
	xor		t0, t0, t0
	addi	t0, t0, 0x050		;5 in the tens place
	bgt		s2, t0, CapFive
AfterCapFive:
	xor		t0, t0, t0
	addi	t0, t0, 0x009		;9 in the ones place
	bgt		s1, t0, CapNineSec
AfterCapNineSec:
	or		s0, s1, s2			;combine tens and ones
	sw		s0, OFSHEX(gp)
Bridge:
	lw		s0, OFSKEY(gp)		;get key
	andi	s0, s0, 0x02		;key key[1]
	xor		t1, t1, t1
	addi	t1, t1, 0x02
	bne		s0, t1, SetSeconds
SetMinutes:
	lw		s0, SW(gp)			;Raw switch data
	andi	s1, s0, 0x00F		;ones place
	andi	s2, s0, 0x0F0		;tens place
	xor		t0, t0, t0
	addi	t0, t0, 0x090		;9 in the tens place
	bgt		s2, t0, CapNinetyMin
AfterCapNinetyMin:
	xor		t0, t0, t0
	addi	t0, t0, 0x009		;9 in the ones place
	bgt		s1, t0, CapNineMin
AfterCapNineMin:
	or		s0, s1, s2			;combine tens and ones
	add		s0, s0, s0			;  <<1
	add		s0, s0, s0			;  <<2
	add		s0, s0, s0			;  <<3
	add		s0, s0, s0			;  <<4
	add		s0, s0, s0			;  <<5
	add		s0, s0, s0			;  <<6
	add		s0, s0, s0			;  <<7
	add		s0, s0, s0			;  <<8
	lw		s1, OFSHEX(gp)		;  get currently displayed value (seconds)
	andi	s1, s1, 0x0FF		;  get seconds
	or		s0, s0, s1			;  combine minutes and seconds
	sw		s0, OFSHEX(gp)
Bridge2:
	lw		s0, OFSKEY(gp)		;get key
	andi	s0, s0, 0x04		;key key[2]
	xor		t1, t1, t1
	addi	t1, t1, 0x04
	bne		s0, t1, SetMinutes
MoveOn:
	not		s0, gp
	sw		s0, OFSLEDR(gp)
	bt		t0, t0, MoveOn
CapFive:
	xor 	s2, s2, s2
	addi	s2, s2, 0x050
	bt		t0, t0, AfterCapFive
CapNineSec:
	xor 	s1, s1, s1
	addi	s1, s1, 0x009
	bt		t0, t0, AfterCapNineSec
CapNinetyMin:
	xor 	s2, s2, s2
	addi	s2, s2, 0x090
	bt		t0, t0, AfterCapNinetyMin
CapNineMin:
	xor 	s1, s1, s1
	addi	s1, s1, 0x009
	bt		t0, t0, AfterCapNineMin	